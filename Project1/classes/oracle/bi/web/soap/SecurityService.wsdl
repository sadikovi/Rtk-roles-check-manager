<wsdl:definitions
    
     targetNamespace="urn://oracle.bi.webservices/v6"
     xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema"
     xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
     xmlns:sawsoap="urn://oracle.bi.webservices/v6"
    >
    <jaxws:bindings xmlns:jaxws="http://java.sun.com/xml/ns/jaxws">
        <jaxws:package name="oracle.bi.web.soap">
            <jaxws:javadoc/>
        </jaxws:package>
    </jaxws:bindings>
    <wsdl:types>
        <xsd:schema xmlns:jxb="http://java.sun.com/xml/ns/jaxb" elementFormDefault="qualified" jxb:version="1.0"
             targetNamespace="urn://oracle.bi.webservices/v6" version="1.0">
            <xsd:annotation>
                <xsd:appinfo>
                    <jxb:schemaBindings>
                        <jxb:package name="oracle.bi.web.soap">
                            <jxb:javadoc/>
                        </jxb:package>
                    </jxb:schemaBindings>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType name="SAWLocale">
                <xsd:sequence>
                    <xsd:element name="language" nillable="true" type="xsd:string"/>
                    <xsd:element name="country" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="LogonParameter">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SAWSessionParameters">
                <xsd:sequence>
                    <xsd:element name="locale" nillable="true" type="sawsoap:SAWLocale"/>
                    <xsd:element name="userAgent" nillable="true" type="xsd:string"/>
                    <xsd:element name="asyncLogon" type="xsd:boolean"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="logonParams" nillable="true"
                         type="sawsoap:LogonParameter"/>
                    <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    <xsd:element name="syndicate" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ReportRef">
                <xsd:sequence>
                    <xsd:element name="reportPath" nillable="true" type="xsd:string"/>
                    <xsd:element name="reportXml" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Variable">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="value" nillable="true"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ReportParams">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="filterExpressions" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="variables" type="sawsoap:Variable"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="nameValues" type="sawsoap:NameValuePair"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="templateInfos" type="sawsoap:TemplateInfo"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="viewName" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="NameValuePair">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="TemplateInfoInstance">
                <xsd:sequence>
                    <xsd:element name="instanceName" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="nameValues" type="sawsoap:NameValuePair"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="TemplateInfo">
                <xsd:sequence>
                    <xsd:element name="templateForEach" type="xsd:string"/>
                    <xsd:element name="templateIterator" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="instance" type="sawsoap:TemplateInfoInstance"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="NameValueArrayPair">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="values" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Account">
                <xsd:annotation>
                    <xsd:documentation>accountType values:
              0 - user
              1 - group
              4 - role</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
                    <xsd:element name="accountType" type="xsd:int"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="guid" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AccessControlToken">
                <xsd:annotation>
                    <xsd:documentation>permissionMask field value is  combination of the following flags:
            1 permission to read items content
            2 permission to traverse directory
            4 permission to change items content
            8 permission to delete an item
            16 permission to assign permissions to others
            32 can take ownership of the item
            2048 permission to run a publisher report live
            4096 permission to schedule a publisher report
            8192 permission to view output of a publisher report</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="account" type="sawsoap:Account"/>
                    <xsd:element name="permissionMask" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ACL">
                <xsd:sequence>
                    <xsd:element maxOccurs="1" minOccurs="0" name="dummy" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="accessControlTokens" type="sawsoap:AccessControlToken"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Privilege">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="description" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="UpdateACLParams">
                <xsd:sequence>
                    <xsd:element name="updateFlag" type="sawsoap:UpdateACLMode"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="ItemInfoType">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Folder"/>
                    <xsd:enumeration value="Link"/>
                    <xsd:enumeration value="Object"/>
                    <xsd:enumeration value="Missing"/>
                    <xsd:enumeration value="NoAccess"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="ItemInfo">
                <xsd:annotation>
                    <xsd:documentation>attributes field value is  a combination of the following flags:
                1 - read only,
                2 - archive,
                4 - hidden,
                8 - system,
                16 - dont index</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="path" type="xsd:string"/>
                    <xsd:element name="type" type="sawsoap:ItemInfoType"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="caption" type="xsd:string"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:int"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="lastModified" type="xsd:dateTime"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="created" type="xsd:dateTime"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="accessed" type="xsd:dateTime"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="creator" type="sawsoap:Account"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="lastModifier" type="sawsoap:Account"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="signature" type="xsd:string"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="targetPath" type="xsd:string"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="acl" type="sawsoap:ACL"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="owner" type="sawsoap:Account"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="itemProperties" type="sawsoap:NameValuePair"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AuthResult">
                <xsd:sequence>
                    <xsd:element name="sessionID" type="xsd:string"/>
                    <xsd:element name="authCompleted" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SessionEnvironment">
                <xsd:sequence>
                    <xsd:element name="userName" type="xsd:string"/>
                    <xsd:element name="homeDirectory" type="sawsoap:ItemInfo"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="sharedDirectories" type="sawsoap:ItemInfo"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="logon">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="name" nillable="true" type="xsd:string"/>
                        <xsd:element name="password" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="logonResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="logonex">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="name" nillable="true" type="xsd:string"/>
                        <xsd:element name="password" nillable="true" type="xsd:string"/>
                        <xsd:element name="sessionparams" nillable="true" type="sawsoap:SAWSessionParameters"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="logonexResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:AuthResult"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="logoff">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="logoffResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="keepAlive">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="keepAliveResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCurUser">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCurUserResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSessionEnvironment">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSessionEnvironmentResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:SessionEnvironment"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSessionVariables">
                <xsd:complexType>
                    <xsd:annotation>
                        <xsd:documentation>Predefined variable names:
                   NQ_SESSION.USER,
                   NQ_SESSION.USERGUID,
                   NQ_SESSION.GROUP,
                   NQ_SESSION.GROUPGUIDS,
                   NQ_SESSION.WEBGROUPS, 
                   NQ_SESSION.REALM,
                   NQ_SESSION.REALMGUID,
                   NQ_SESSION.TOKENS,
                   NQ_SESSION.REQUESTKEY,
                   NQ_SESSION.PORTALPATH,
                   NQ_SESSION.DISPLAYNAME,
                   NQ_SESSION.SKIN,
                   NQ_SESSION.STYLE,
                   NQ_SESSION.EMAIL,
                   NQ_SESSION.CURRENCYTAG,
                   NQ_SESSION.ACTUATEUSERID,
                   NQ_SESSION.TIMEZONE,
                   NQ_SESSION.DATA_TZ,
                   NQ_SESSION.DATA_DISPLAY_TZ,
                   NQ_SESSION.PROXYLEVEL,
                   NQ_SESSION.USERLOCALE,
                   NQ_SESSION.USERLANG,
                   NQ_SESSION.PREFERRED_CURRENCY</xsd:documentation>
                    </xsd:annotation>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="names" nillable="true" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSessionVariablesResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="impersonate">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="name" nillable="true" type="xsd:string"/>
                        <xsd:element name="password" nillable="true" type="xsd:string"/>
                        <xsd:element name="impersonateID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="impersonateResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="impersonateex">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="name" type="xsd:string"/>
                        <xsd:element name="password" type="xsd:string"/>
                        <xsd:element name="impersonateID" type="xsd:string"/>
                        <xsd:element name="sessionparams" nillable="true" type="sawsoap:SAWSessionParameters"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="impersonateexResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:AuthResult"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="ErrorDetailsLevel">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="ErrorCode"/>
                    <xsd:enumeration value="ErrorCodeAndText"/>
                    <xsd:enumeration value="FullDetails"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="ErrorInfo">
                <xsd:sequence>
                    <xsd:element minOccurs="0" name="code" type="xsd:string"/>
                    <xsd:element minOccurs="0" name="context" type="xsd:string"/>
                    <xsd:element minOccurs="0" name="message" type="xsd:string"/>
                    <xsd:element minOccurs="0" name="details" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CatalogObject">
                <xsd:sequence>
                    <xsd:element minOccurs="0" name="catalogObject" type="xsd:string"/>
                    <xsd:element xmlns:xmime="http://www.w3.org/2005/05/xmlmime" minOccurs="0" name="catalogObjectBytes"
                         type="xsd:base64Binary" xmime:expectedContentTypes="application/obipscatalogobject"/>
                    <xsd:element minOccurs="0" name="itemInfo" type="sawsoap:ItemInfo"/>
                    <xsd:element minOccurs="0" name="errorInfo" type="sawsoap:ErrorInfo"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="voidType">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="deleteItem">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="deleteItemResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="removeFolder">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="recursive" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="removeFolderResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="createFolder">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="createIfNotExists" type="xsd:boolean"/>
                        <xsd:element name="createIntermediateDirs" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="createFolderResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="createLink">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="pathTarget" type="xsd:string"/>
                        <xsd:element name="overwriteIfExists" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="createLinkResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="moveItem">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pathSrc" type="xsd:string"/>
                        <xsd:element name="pathDest" type="xsd:string"/>
                        <xsd:element name="flagACL" type="xsd:int"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="moveItemResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="copyItem">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pathSrc" type="xsd:string"/>
                        <xsd:element name="pathDest" type="xsd:string"/>
                        <xsd:element name="flagACL" type="xsd:int"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="copyItemResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="copyItem2">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element name="recursive" type="xsd:boolean"/>
                        <xsd:element name="permissions" type="xsd:boolean"/>
                        <xsd:element name="timestamps" type="xsd:boolean"/>
                        <xsd:element default="false" name="useMtom" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="copyItem2Result">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element xmlns:xmime="http://www.w3.org/2005/05/xmlmime" name="archive" type="xsd:base64Binary"
                             xmime:expectedContentTypes="application/obipsarchive"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="pasteItem2">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element xmlns:xmime="http://www.w3.org/2005/05/xmlmime" name="archive" type="xsd:base64Binary"
                             xmime:expectedContentTypes="application/obipsarchive"/>
                        <xsd:element name="replacePath" type="xsd:string"/>
                        <xsd:element name="flagACL" type="xsd:int"/>
                        <xsd:element name="flagOverwrite" type="xsd:int"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="pasteItem2Result">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:complexType name="GetSubItemsFilter">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="itemInfoFilters" nillable="true"
                         type="sawsoap:NameValuePair"/>
                    <xsd:element name="dummy" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="GetSubItemsParams">
                <xsd:sequence>
                    <xsd:element name="filter" nillable="true" type="sawsoap:GetSubItemsFilter"/>
                    <xsd:element name="includeACL" type="xsd:boolean"/>
                    <xsd:element name="withPermission" type="xsd:int"/>
                    <xsd:element name="withPermissionMask" type="xsd:int"/>
                    <xsd:element name="withAttributes" type="xsd:int"/>
                    <xsd:element name="withAttributesMask" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="getSubItems">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="mask" type="xsd:string"/>
                        <xsd:element name="resolveLinks" type="xsd:boolean"/>
                        <xsd:element name="options" nillable="true" type="sawsoap:GetSubItemsParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSubItemsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="itemInfo" type="sawsoap:ItemInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getItemInfo">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="resolveLinks" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getItemInfoResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:ItemInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="ReadObjectsReturnOptions">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="NoObject"/>
                    <xsd:enumeration value="ObjectAsString"/>
                    <xsd:enumeration value="ObjectAsBinary"/>
                    <xsd:enumeration value="ObjectAsBinaryUseMtom"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="readObjects">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="paths" type="xsd:string"/>
                        <xsd:element name="resolveLinks" type="xsd:boolean"/>
                        <xsd:element name="errorMode" type="sawsoap:ErrorDetailsLevel"/>
                        <xsd:element name="returnOptions" type="sawsoap:ReadObjectsReturnOptions"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="readObjectsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="catalogObject" type="sawsoap:CatalogObject"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="writeObjects">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="catalogObjects" type="sawsoap:CatalogObject"/>
                        <xsd:element name="allowOverwrite" type="xsd:boolean"/>
                        <xsd:element name="createIntermediateDirs" type="xsd:boolean"/>
                        <xsd:element name="errorMode" type="sawsoap:ErrorDetailsLevel"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="writeObjectsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorInfo" type="sawsoap:ErrorInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:complexType name="UpdateCatalogItemACLParams">
                <xsd:complexContent>
                    <xsd:extension base="sawsoap:UpdateACLParams">
                        <xsd:sequence>
                            <xsd:element name="recursive" type="xsd:boolean"/>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:element name="updateCatalogItemACL">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element name="acl" type="sawsoap:ACL"/>
                        <xsd:element name="options" type="sawsoap:UpdateCatalogItemACLParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="updateCatalogItemACLResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setOwnership">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="owner" type="sawsoap:Account"/>
                        <xsd:element name="recursive" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setOwnershipResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setItemAttributes">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element name="value" type="xsd:int"/>
                        <xsd:element name="valueOff" type="xsd:int"/>
                        <xsd:element name="recursive" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setItemAttributesResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setItemProperty">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="name" type="xsd:string"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="value" type="xsd:string"/>
                        <xsd:element name="recursive" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setItemPropertyResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="maintenanceMode">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="flag" type="xsd:boolean"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="maintenanceModeResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="XMLQueryOutputFormat">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="SAWRowsetData"/>
                    <xsd:enumeration value="SAWRowsetSchema"/>
                    <xsd:enumeration value="SAWRowsetSchemaAndData"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="XMLQueryExecutionOptions">
                <xsd:sequence>
                    <xsd:element name="async" type="xsd:boolean"/>
                    <xsd:element name="maxRowsPerPage" type="xsd:int"/>
                    <xsd:element name="refresh" type="xsd:boolean"/>
                    <xsd:element name="presentationInfo" type="xsd:boolean"/>
                    <xsd:element name="type" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="QueryResults">
                <xsd:sequence>
                    <xsd:element name="rowset" type="xsd:string"/>
                    <xsd:element name="queryID" type="xsd:string"/>
                    <xsd:element name="finished" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="executeXMLQuery">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="report" type="sawsoap:ReportRef"/>
                        <xsd:element name="outputFormat" type="sawsoap:XMLQueryOutputFormat"/>
                        <xsd:element name="executionOptions" nillable="true" type="sawsoap:XMLQueryExecutionOptions"/>
                        <xsd:element name="reportParams" nillable="true" type="sawsoap:ReportParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="executeXMLQueryResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:QueryResults"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="upgradeXML">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="xml" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="upgradeXMLResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="executeSQLQuery">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sql" type="xsd:string"/>
                        <xsd:element name="outputFormat" type="sawsoap:XMLQueryOutputFormat"/>
                        <xsd:element name="executionOptions" nillable="true" type="sawsoap:XMLQueryExecutionOptions"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="executeSQLQueryResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:QueryResults"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="fetchNext">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="queryID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="fetchNextResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="sawsoap:QueryResults"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="cancelQuery">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="queryID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="cancelQueryResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPromptedFilters">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="report" type="sawsoap:ReportRef"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPromptedFiltersResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="promptedFilter" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="UpdateACLMode">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="ReplaceAcl"/>
                    <xsd:enumeration value="ReplaceForSpecifiedAccounts"/>
                    <xsd:enumeration value="DeleteAccountsFromAcl"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="getGlobalPrivileges">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getGlobalPrivilegesResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="sawPrivileges" type="sawsoap:Privilege"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getGlobalPrivilegeACL">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="privilegeName" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getGlobalPrivilegeACLResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="acl" type="sawsoap:ACL"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="updateGlobalPrivilegeACL">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="privilegeName" type="xsd:string"/>
                        <xsd:element name="acl" type="sawsoap:ACL"/>
                        <xsd:element name="updateACLParams" nillable="true" type="sawsoap:UpdateACLParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="updateGlobalPrivilegeACLResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPermissions">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="acls" type="sawsoap:ACL"/>
                        <xsd:element name="account" nillable="true" type="sawsoap:Account"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPermissionsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="xsd:int"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPrivilegesStatus">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="privileges" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPrivilegesStatusResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getAccounts">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="account" type="sawsoap:Account"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getAccountsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="accountDetails" type="sawsoap:Account"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="forgetAccounts">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="account" type="sawsoap:Account"/>
                        <xsd:element name="cleanuplevel" type="xsd:int"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="forgetAccountsResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="renameAccounts">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="from" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="to" type="sawsoap:Account"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="renameAccountsResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="joinGroups">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="group" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="member" type="sawsoap:Account"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="joinGroupsResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="leaveGroups">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="group" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="member" type="sawsoap:Account"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="leaveGroupsResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getGroups">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="member" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="expandGroups" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getGroupsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="account" type="sawsoap:Account"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getMembers">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="group" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="expandGroups" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getMembersResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="account" type="sawsoap:Account"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="isMember">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="group" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="1" name="member" type="sawsoap:Account"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="expandGroups" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="isMemberResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="result" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="evaluateCondition">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="reportCustomizationParameters"
                             type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="evaluateConditionResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="conditionIsTrue" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="evaluateInlineCondition">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="conditionXML" type="xsd:string"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="reportCustomizationParameters"
                             type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="evaluateInlineConditionResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="conditionIsTrue" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getConditionCustomizableReportElements">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="path" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getConditionCustomizableReportElementsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="customizableElement" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="ReportHTMLLinksMode">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="SamePage"/>
                    <xsd:enumeration value="NewPage"/>
                    <xsd:enumeration value="InPlace"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="ReportHTMLOptions">
                <xsd:sequence>
                    <xsd:element name="enableDelayLoading" type="xsd:boolean"/>
                    <xsd:element name="linkMode" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="StartPageParams">
                <xsd:sequence>
                    <xsd:element name="idsPrefix" nillable="true" type="xsd:string"/>
                    <xsd:element default="false" name="dontUseHttpCookies" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="startPage">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="options" nillable="true" type="sawsoap:StartPageParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="startPageResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="endPage">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pageID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="endPageResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="addReportToPage">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pageID" type="xsd:string"/>
                        <xsd:element name="reportID" type="xsd:string"/>
                        <xsd:element name="report" type="sawsoap:ReportRef"/>
                        <xsd:element name="reportViewName" nillable="true" type="xsd:string"/>
                        <xsd:element name="reportParams" nillable="true" type="sawsoap:ReportParams"/>
                        <xsd:element name="options" nillable="true" type="sawsoap:ReportHTMLOptions"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="addReportToPageResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHeadersHtml">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pageID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHeadersHtmlResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCommonBodyHtml">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pageID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCommonBodyHtmlResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHtmlForReport">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="pageID" type="xsd:string"/>
                        <xsd:element name="pageReportID" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHtmlForReportResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setBridge">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="bridge" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setBridgeResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHtmlForPageWithOneReport">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="reportID" type="xsd:string"/>
                        <xsd:element name="report" type="sawsoap:ReportRef"/>
                        <xsd:element name="reportViewName" nillable="true" type="xsd:string"/>
                        <xsd:element name="reportParams" nillable="true" type="sawsoap:ReportParams"/>
                        <xsd:element name="reportOptions" nillable="true" type="sawsoap:ReportHTMLOptions"/>
                        <xsd:element name="pageParams" nillable="true" type="sawsoap:StartPageParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getHtmlForPageWithOneReportResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="executeIBotNow">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="executeIBotNowResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="writeIBot">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="obj" type="sawsoap:CatalogObject"/>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="resolveLinks" type="xsd:boolean"/>
                        <xsd:element name="allowOverwrite" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="writeIBotResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobID" type="xsd:int"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="moveIBot">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="fromPath" type="xsd:string"/>
                        <xsd:element name="toPath" type="xsd:string"/>
                        <xsd:element name="resolveLinks" type="xsd:boolean"/>
                        <xsd:element name="allowOverwrite" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="moveIBotResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="deleteIBot">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="deleteIBotResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="subscribe">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element name="customizationXml" nillable="true" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="subscribeResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="unsubscribe">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="path" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="unsubscribeResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="sendMessage">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="recipient" type="xsd:string"/>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="group" type="xsd:string"/>
                        <xsd:element name="subject" type="xsd:string"/>
                        <xsd:element name="body" type="xsd:string"/>
                        <xsd:element name="priority" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="sendMessageResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="status" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:complexType name="SAWException">
                <xsd:sequence>
                    <xsd:element name="message" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="exception" type="sawsoap:SAWException"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PromptedColumnInfo">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Columns" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="JobInfo">
                <xsd:sequence>
                    <xsd:element name="jobStats" type="sawsoap:JobStats"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="fileInfo" type="sawsoap:FileInfo"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="detailedInfo">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="JobStats">
                <xsd:sequence>
                    <xsd:element name="jobID" type="xsd:integer"/>
                    <xsd:element name="jobType" type="xsd:string"/>
                    <xsd:element name="jobUser" type="xsd:string"/>
                    <xsd:element name="jobState">
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="Running"/>
                                <xsd:enumeration value="Finished"/>
                                <xsd:enumeration value="Error"/>
                                <xsd:enumeration value="Queued"/>
                                <xsd:enumeration value="Cancelled"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="jobTotalMilliSec" type="xsd:string"/>
                    <xsd:element name="jobStartedTime" type="xsd:dateTime"/>
                    <xsd:element maxOccurs="1" minOccurs="0" name="jobFinishedTime" type="xsd:dateTime"/>
                    <xsd:element name="jobIsCancelling" type="xsd:string"/>
                    <xsd:element minOccurs="0" name="exception" type="sawsoap:SAWException"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="FileInfo">
                <xsd:sequence>
                    <xsd:element name="filepath" type="xsd:string"/>
                    <xsd:element name="startTime" type="xsd:dateTime"/>
                    <xsd:element name="endTime" type="xsd:dateTime"/>
                    <xsd:element name="filesize" type="xsd:long"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="fileAttribs" type="sawsoap:NameValueArrayPair"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="OverrideType">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Default"/>
                    <xsd:enumeration value="None"/>
                    <xsd:enumeration value="All"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="SegmentationOptions">
                <xsd:sequence>
                    <xsd:element default="false" maxOccurs="1" minOccurs="0" name="removeCacheHits" type="xsd:boolean"/>
                    <xsd:element default="Default" maxOccurs="1" minOccurs="0" name="countOverride" type="sawsoap:OverrideType"/>
                    <xsd:element default="Default" maxOccurs="1" minOccurs="0" name="cacheOverride" type="sawsoap:OverrideType"/>
                    <xsd:element default="100" maxOccurs="1" minOccurs="0" name="samplingFactor" type="xsd:decimal"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="govRules" type="sawsoap:NameValuePair"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="prompts" type="sawsoap:NameValuePair"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="TreeNodePath">
                <xsd:sequence>
                    <xsd:element name="treePath" type="xsd:string"/>
                    <xsd:element name="treeNode" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="writeListFiles">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="report" type="sawsoap:ReportRef"/>
                        <xsd:element minOccurs="0" name="reportParams" type="sawsoap:ReportParams"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treeNodePath" type="sawsoap:TreeNodePath"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentationOptions" type="sawsoap:SegmentationOptions"/>
                        <xsd:element name="filesystem" type="xsd:string"/>
                        <xsd:element name="timeout" type="xsd:integer"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="writeListFilesResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getJobInfo">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobID" type="xsd:integer"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getJobInfoResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="cancelJob">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobID" type="xsd:integer"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="cancelJobResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCounts">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treePath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentationOptions" type="sawsoap:SegmentationOptions"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getCountsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPromptedColumns">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treePath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getPromptedColumnsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ColumnInfo" type="sawsoap:PromptedColumnInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="purgeCache">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treePath" type="xsd:string"/>
                        <xsd:element default="false" maxOccurs="1" minOccurs="0" name="ignoreCacheRef"
                             type="xsd:boolean"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="purgeCacheResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="prepareCache">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treePath" type="xsd:string"/>
                        <xsd:element default="false" maxOccurs="1" minOccurs="0" name="refresh" type="xsd:boolean"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="prepareCacheResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="saveResultSet">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="treeNodePath" type="sawsoap:TreeNodePath"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="savedSegmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentationOptions" type="sawsoap:SegmentationOptions"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="SRCustomLabel" type="xsd:string"/>
                        <xsd:element default="false" maxOccurs="1" minOccurs="0" name="appendStaticSegment"
                             type="xsd:boolean"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="saveResultSetResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:complexType name="arrayOfGUIDs">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="GUID" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="deleteResultSet">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="targetLevel" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="1" name="GUIDs" type="sawsoap:arrayOfGUIDs"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="segmentPath" type="xsd:string"/>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="deleteResultSetResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="jobInfo" type="sawsoap:JobInfo"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="SATableDetails">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Minimum"/>
                    <xsd:enumeration value="IncludeColumns"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="SASubjectAreaDetails">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Minimum"/>
                    <xsd:enumeration value="IncludeTables"/>
                    <xsd:enumeration value="IncludeTablesAndColumns"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="AggregationRule">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="None"/>
                    <xsd:enumeration value="Sum"/>
                    <xsd:enumeration value="Count"/>
                    <xsd:enumeration value="Rank"/>
                    <xsd:enumeration value="Avg"/>
                    <xsd:enumeration value="Min"/>
                    <xsd:enumeration value="Max"/>
                    <xsd:enumeration value="Last"/>
                    <xsd:enumeration value="Percentile"/>
                    <xsd:enumeration value="First"/>
                    <xsd:enumeration value="ServerDefault"/>
                    <xsd:enumeration value="CountStar"/>
                    <xsd:enumeration value="Complex"/>
                    <xsd:enumeration value="TopN"/>
                    <xsd:enumeration value="BottomN"/>
                    <xsd:enumeration value="SubTotal"/>
                    <xsd:enumeration value="DimensionAggr"/>
                    <xsd:enumeration value="CountDistinct"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="SADataType">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Invalid"/>
                    <xsd:enumeration value="Unknown"/>
                    <xsd:enumeration value="VarBinary"/>
                    <xsd:enumeration value="LongVarBinary"/>
                    <xsd:enumeration value="Binary"/>
                    <xsd:enumeration value="Char"/>
                    <xsd:enumeration value="VarChar"/>
                    <xsd:enumeration value="LongVarChar"/>
                    <xsd:enumeration value="Date"/>
                    <xsd:enumeration value="Time"/>
                    <xsd:enumeration value="TimeStamp"/>
                    <xsd:enumeration value="Numeric"/>
                    <xsd:enumeration value="Decimal"/>
                    <xsd:enumeration value="Integer"/>
                    <xsd:enumeration value="SmallInt"/>
                    <xsd:enumeration value="BigInt"/>
                    <xsd:enumeration value="TinyInt"/>
                    <xsd:enumeration value="Bit"/>
                    <xsd:enumeration value="Float"/>
                    <xsd:enumeration value="Real"/>
                    <xsd:enumeration value="Double"/>
                    <xsd:enumeration value="Coordinate"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="SAColumn">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="displayName" type="xsd:string"/>
                    <xsd:element name="description" type="xsd:string"/>
                    <xsd:element name="nullable" type="xsd:boolean"/>
                    <xsd:element name="dataType" type="xsd:string"/>
                    <xsd:element name="aggregatable" type="xsd:boolean"/>
                    <xsd:element name="aggrRule" nillable="false" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SATable">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="displayName" type="xsd:string"/>
                    <xsd:element name="description" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="columns" nillable="true" type="sawsoap:SAColumn"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SASubjectArea">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="displayName" type="xsd:string"/>
                    <xsd:element name="description" type="xsd:string"/>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="tables" nillable="true" type="sawsoap:SATable"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="clearQueryCache">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="0" name="sessionID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="clearQueryCacheResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="result" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSubjectAreas">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getSubjectAreasResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="subjectArea" type="sawsoap:SASubjectArea"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeSubjectArea">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="subjectAreaName" type="xsd:string"/>
                        <xsd:element name="detailsLevel" type="sawsoap:SASubjectAreaDetails"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeSubjectAreaResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="subjectArea" type="sawsoap:SASubjectArea"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeTable">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="subjectAreaName" type="xsd:string"/>
                        <xsd:element name="tableName" type="xsd:string"/>
                        <xsd:element name="detailsLevel" type="sawsoap:SATableDetails"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeTableResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="table" type="sawsoap:SATable"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeColumn">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="subjectAreaName" type="xsd:string"/>
                        <xsd:element name="tableName" type="xsd:string"/>
                        <xsd:element name="columnName" type="xsd:string"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="describeColumnResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="column" type="sawsoap:SAColumn"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:complexType name="ImportError">
                <xsd:sequence>
                    <xsd:element name="item" type="xsd:string"/>
                    <xsd:element name="operation" type="xsd:string"/>
                    <xsd:element name="file" type="xsd:string"/>
                    <xsd:element name="line" type="xsd:integer"/>
                    <xsd:element name="catalogError" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CatalogItemsFilter">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="items" type="xsd:string"/>
                    <xsd:element name="from" type="xsd:dateTime"/>
                    <xsd:element name="to" type="xsd:dateTime"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PathMapEntry">
                <xsd:sequence>
                    <xsd:element name="source" type="xsd:string"/>
                    <xsd:element name="destination" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PathMap">
                <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" minOccurs="0" name="pathMapEntries" type="sawsoap:PathMapEntry"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="ExportFlags">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="processAll_ForMerge"/>
                    <xsd:enumeration value="processAll_ForReplace"/>
                    <xsd:enumeration value="processAll_ForWriteIfNotExists"/>
                    <xsd:enumeration value="processLocalChanges"/>
                    <xsd:enumeration value="processRemoteChanges"/>
                    <xsd:enumeration value="processAllChanges"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="ImportFlags">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="processLocalChanges"/>
                    <xsd:enumeration value="processRemoteChanges"/>
                    <xsd:enumeration value="processAllChanges"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="export">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="filename" type="xsd:string"/>
                        <xsd:element name="filter" type="sawsoap:CatalogItemsFilter"/>
                        <xsd:element name="flag" type="sawsoap:ExportFlags"/>
                        <xsd:element default="true" name="exportSecurity" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="exportResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="import">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="filename" type="xsd:string"/>
                        <xsd:element name="flag" type="sawsoap:ImportFlags"/>
                        <xsd:element name="lastPurgedLog" type="xsd:dateTime"/>
                        <xsd:element name="updateReplicationLog" type="xsd:boolean"/>
                        <xsd:element name="returnErrors" type="xsd:boolean"/>
                        <xsd:element name="filter" nillable="true" type="sawsoap:CatalogItemsFilter"/>
                        <xsd:element name="pathMap" nillable="true" type="sawsoap:PathMap"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="importResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="error" type="sawsoap:ImportError"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="markForReplication">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="xsd:string"/>
                        <xsd:element name="replicate" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="markForReplicationResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="purgeLog">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="unbounded" minOccurs="0" name="items" type="xsd:string"/>
                        <xsd:element name="timestamp" type="xsd:dateTime"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="purgeLogResult">
                <xsd:complexType>
                    <xsd:sequence/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="applyReportParams">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="reportRef" type="sawsoap:ReportRef"/>
                        <xsd:element name="reportParams" type="sawsoap:ReportParams"/>
                        <xsd:element name="encodeInString" type="xsd:boolean"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="applyReportParamsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:anyType"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="generateReportSQL">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="reportRef" type="sawsoap:ReportRef"/>
                        <xsd:element name="reportParams" nillable="true" type="sawsoap:ReportParams"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="generateReportSQLResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="return" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="applyReportDefaults">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="reportRefs" type="sawsoap:ReportRef"/>
                        <xsd:element name="sessionID" nillable="true" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="applyReportDefaultsResult">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element maxOccurs="1" minOccurs="1" name="reportXml" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:schema>
    </wsdl:types>
    <wsdl:message name="writeListFilesIn">
        <wsdl:part name="parameters" element="sawsoap:writeListFiles"/>
    </wsdl:message>
    <wsdl:message name="writeListFilesOut">
        <wsdl:part name="parameters" element="sawsoap:writeListFilesResult"/>
    </wsdl:message>
    <wsdl:message name="getJobInfoIn">
        <wsdl:part name="parameters" element="sawsoap:getJobInfo"/>
    </wsdl:message>
    <wsdl:message name="getJobInfoOut">
        <wsdl:part name="parameters" element="sawsoap:getJobInfoResult"/>
    </wsdl:message>
    <wsdl:message name="cancelJobIn">
        <wsdl:part name="parameters" element="sawsoap:cancelJob"/>
    </wsdl:message>
    <wsdl:message name="cancelJobOut">
        <wsdl:part name="parameters" element="sawsoap:cancelJobResult"/>
    </wsdl:message>
    <wsdl:message name="getCountsIn">
        <wsdl:part name="parameters" element="sawsoap:getCounts"/>
    </wsdl:message>
    <wsdl:message name="getCountsOut">
        <wsdl:part name="parameters" element="sawsoap:getCountsResult"/>
    </wsdl:message>
    <wsdl:message name="getPromptedColumnsIn">
        <wsdl:part name="parameters" element="sawsoap:getPromptedColumns"/>
    </wsdl:message>
    <wsdl:message name="getPromptedColumnsOut">
        <wsdl:part name="parameters" element="sawsoap:getPromptedColumnsResult"/>
    </wsdl:message>
    <wsdl:message name="purgeCacheIn">
        <wsdl:part name="parameters" element="sawsoap:purgeCache"/>
    </wsdl:message>
    <wsdl:message name="purgeCacheOut">
        <wsdl:part name="parameters" element="sawsoap:purgeCacheResult"/>
    </wsdl:message>
    <wsdl:message name="prepareCacheIn">
        <wsdl:part name="parameters" element="sawsoap:prepareCache"/>
    </wsdl:message>
    <wsdl:message name="prepareCacheOut">
        <wsdl:part name="parameters" element="sawsoap:prepareCacheResult"/>
    </wsdl:message>
    <wsdl:message name="saveResultSetIn">
        <wsdl:part name="parameters" element="sawsoap:saveResultSet"/>
    </wsdl:message>
    <wsdl:message name="saveResultSetOut">
        <wsdl:part name="parameters" element="sawsoap:saveResultSetResult"/>
    </wsdl:message>
    <wsdl:message name="deleteResultSetIn">
        <wsdl:part name="parameters" element="sawsoap:deleteResultSet"/>
    </wsdl:message>
    <wsdl:message name="deleteResultSetOut">
        <wsdl:part name="parameters" element="sawsoap:deleteResultSetResult"/>
    </wsdl:message>
    <wsdl:message name="evaluateConditionIn">
        <wsdl:part name="parameters" element="sawsoap:evaluateCondition"/>
    </wsdl:message>
    <wsdl:message name="evaluateConditionOut">
        <wsdl:part name="parameters" element="sawsoap:evaluateConditionResult"/>
    </wsdl:message>
    <wsdl:message name="evaluateInlineConditionIn">
        <wsdl:part name="parameters" element="sawsoap:evaluateInlineCondition"/>
    </wsdl:message>
    <wsdl:message name="evaluateInlineConditionOut">
        <wsdl:part name="parameters" element="sawsoap:evaluateInlineConditionResult"/>
    </wsdl:message>
    <wsdl:message name="getConditionCustomizableReportElementsIn">
        <wsdl:part name="parameters" element="sawsoap:getConditionCustomizableReportElements"/>
    </wsdl:message>
    <wsdl:message name="getConditionCustomizableReportElementsOut">
        <wsdl:part name="parameters" element="sawsoap:getConditionCustomizableReportElementsResult"/>
    </wsdl:message>
    <wsdl:message name="deleteItemIn">
        <wsdl:part name="parameters" element="sawsoap:deleteItem"/>
    </wsdl:message>
    <wsdl:message name="deleteItemOut">
        <wsdl:part name="parameters" element="sawsoap:deleteItemResult"/>
    </wsdl:message>
    <wsdl:message name="removeFolderIn">
        <wsdl:part name="parameters" element="sawsoap:removeFolder"/>
    </wsdl:message>
    <wsdl:message name="removeFolderOut">
        <wsdl:part name="parameters" element="sawsoap:removeFolderResult"/>
    </wsdl:message>
    <wsdl:message name="createFolderIn">
        <wsdl:part name="parameters" element="sawsoap:createFolder"/>
    </wsdl:message>
    <wsdl:message name="createFolderOut">
        <wsdl:part name="parameters" element="sawsoap:createFolderResult"/>
    </wsdl:message>
    <wsdl:message name="createLinkIn">
        <wsdl:part name="parameters" element="sawsoap:createLink"/>
    </wsdl:message>
    <wsdl:message name="createLinkOut">
        <wsdl:part name="parameters" element="sawsoap:createLinkResult"/>
    </wsdl:message>
    <wsdl:message name="moveItemIn">
        <wsdl:part name="parameters" element="sawsoap:moveItem"/>
    </wsdl:message>
    <wsdl:message name="moveItemOut">
        <wsdl:part name="parameters" element="sawsoap:moveItemResult"/>
    </wsdl:message>
    <wsdl:message name="copyItemIn">
        <wsdl:part name="parameters" element="sawsoap:copyItem"/>
    </wsdl:message>
    <wsdl:message name="copyItemOut">
        <wsdl:part name="parameters" element="sawsoap:copyItemResult"/>
    </wsdl:message>
    <wsdl:message name="copyItem2In">
        <wsdl:part name="parameters" element="sawsoap:copyItem2"/>
    </wsdl:message>
    <wsdl:message name="copyItem2Out">
        <wsdl:part name="parameters" element="sawsoap:copyItem2Result"/>
    </wsdl:message>
    <wsdl:message name="pasteItem2In">
        <wsdl:part name="parameters" element="sawsoap:pasteItem2"/>
    </wsdl:message>
    <wsdl:message name="pasteItem2Out">
        <wsdl:part name="parameters" element="sawsoap:pasteItem2Result"/>
    </wsdl:message>
    <wsdl:message name="getSubItemsIn">
        <wsdl:part name="parameters" element="sawsoap:getSubItems"/>
    </wsdl:message>
    <wsdl:message name="getSubItemsOut">
        <wsdl:part name="parameters" element="sawsoap:getSubItemsResult"/>
    </wsdl:message>
    <wsdl:message name="getItemInfoIn">
        <wsdl:part name="parameters" element="sawsoap:getItemInfo"/>
    </wsdl:message>
    <wsdl:message name="getItemInfoOut">
        <wsdl:part name="parameters" element="sawsoap:getItemInfoResult"/>
    </wsdl:message>
    <wsdl:message name="setItemPropertyIn">
        <wsdl:part name="parameters" element="sawsoap:setItemProperty"/>
    </wsdl:message>
    <wsdl:message name="setItemPropertyOut">
        <wsdl:part name="parameters" element="sawsoap:setItemPropertyResult"/>
    </wsdl:message>
    <wsdl:message name="maintenanceModeIn">
        <wsdl:part name="parameters" element="sawsoap:maintenanceMode"/>
    </wsdl:message>
    <wsdl:message name="maintenanceModeOut">
        <wsdl:part name="parameters" element="sawsoap:maintenanceModeResult"/>
    </wsdl:message>
    <wsdl:message name="readObjectsIn">
        <wsdl:part name="parameters" element="sawsoap:readObjects"/>
    </wsdl:message>
    <wsdl:message name="readObjectsOut">
        <wsdl:part name="parameters" element="sawsoap:readObjectsResult"/>
    </wsdl:message>
    <wsdl:message name="writeObjectsIn">
        <wsdl:part name="parameters" element="sawsoap:writeObjects"/>
    </wsdl:message>
    <wsdl:message name="writeObjectsOut">
        <wsdl:part name="parameters" element="sawsoap:writeObjectsResult"/>
    </wsdl:message>
    <wsdl:message name="updateCatalogItemACLIn">
        <wsdl:part name="parameters" element="sawsoap:updateCatalogItemACL"/>
    </wsdl:message>
    <wsdl:message name="updateCatalogItemACLOut">
        <wsdl:part name="parameters" element="sawsoap:updateCatalogItemACLResult"/>
    </wsdl:message>
    <wsdl:message name="setOwnershipIn">
        <wsdl:part name="parameters" element="sawsoap:setOwnership"/>
    </wsdl:message>
    <wsdl:message name="setOwnershipOut">
        <wsdl:part name="parameters" element="sawsoap:setOwnershipResult"/>
    </wsdl:message>
    <wsdl:message name="setItemAttributesIn">
        <wsdl:part name="parameters" element="sawsoap:setItemAttributes"/>
    </wsdl:message>
    <wsdl:message name="setItemAttributesOut">
        <wsdl:part name="parameters" element="sawsoap:setItemAttributesResult"/>
    </wsdl:message>
    <wsdl:message name="exportIn">
        <wsdl:part name="parameters" element="sawsoap:export"/>
    </wsdl:message>
    <wsdl:message name="exportOut">
        <wsdl:part name="parameters" element="sawsoap:exportResult"/>
    </wsdl:message>
    <wsdl:message name="importIn">
        <wsdl:part name="parameters" element="sawsoap:import"/>
    </wsdl:message>
    <wsdl:message name="importOut">
        <wsdl:part name="parameters" element="sawsoap:importResult"/>
    </wsdl:message>
    <wsdl:message name="markForReplicationIn">
        <wsdl:part name="parameters" element="sawsoap:markForReplication"/>
    </wsdl:message>
    <wsdl:message name="markForReplicationOut">
        <wsdl:part name="parameters" element="sawsoap:markForReplicationResult"/>
    </wsdl:message>
    <wsdl:message name="purgeLogIn">
        <wsdl:part name="parameters" element="sawsoap:purgeLog"/>
    </wsdl:message>
    <wsdl:message name="purgeLogOut">
        <wsdl:part name="parameters" element="sawsoap:purgeLogResult"/>
    </wsdl:message>
    <wsdl:message name="logonIn">
        <wsdl:part name="parameters" element="sawsoap:logon"/>
    </wsdl:message>
    <wsdl:message name="logonOut">
        <wsdl:part name="parameters" element="sawsoap:logonResult"/>
    </wsdl:message>
    <wsdl:message name="logonexIn">
        <wsdl:part name="parameters" element="sawsoap:logonex"/>
    </wsdl:message>
    <wsdl:message name="logonexOut">
        <wsdl:part name="parameters" element="sawsoap:logonexResult"/>
    </wsdl:message>
    <wsdl:message name="logoffIn">
        <wsdl:part name="parameters" element="sawsoap:logoff"/>
    </wsdl:message>
    <wsdl:message name="logoffOut">
        <wsdl:part name="parameters" element="sawsoap:logoffResult"/>
    </wsdl:message>
    <wsdl:message name="keepAliveIn">
        <wsdl:part name="parameters" element="sawsoap:keepAlive"/>
    </wsdl:message>
    <wsdl:message name="keepAliveOut">
        <wsdl:part name="parameters" element="sawsoap:keepAliveResult"/>
    </wsdl:message>
    <wsdl:message name="getCurUserIn">
        <wsdl:part name="parameters" element="sawsoap:getCurUser"/>
    </wsdl:message>
    <wsdl:message name="getCurUserOut">
        <wsdl:part name="parameters" element="sawsoap:getCurUserResult"/>
    </wsdl:message>
    <wsdl:message name="getSessionEnvironmentIn">
        <wsdl:part name="parameters" element="sawsoap:getSessionEnvironment"/>
    </wsdl:message>
    <wsdl:message name="getSessionEnvironmentOut">
        <wsdl:part name="parameters" element="sawsoap:getSessionEnvironmentResult"/>
    </wsdl:message>
    <wsdl:message name="getSessionVariablesIn">
        <wsdl:part name="parameters" element="sawsoap:getSessionVariables"/>
    </wsdl:message>
    <wsdl:message name="getSessionVariablesOut">
        <wsdl:part name="parameters" element="sawsoap:getSessionVariablesResult"/>
    </wsdl:message>
    <wsdl:message name="impersonateIn">
        <wsdl:part name="parameters" element="sawsoap:impersonate"/>
    </wsdl:message>
    <wsdl:message name="impersonateOut">
        <wsdl:part name="parameters" element="sawsoap:impersonateResult"/>
    </wsdl:message>
    <wsdl:message name="impersonateexIn">
        <wsdl:part name="parameters" element="sawsoap:impersonateex"/>
    </wsdl:message>
    <wsdl:message name="impersonateexOut">
        <wsdl:part name="parameters" element="sawsoap:impersonateexResult"/>
    </wsdl:message>
    <wsdl:message name="applyReportParamsIn">
        <wsdl:part name="parameters" element="sawsoap:applyReportParams"/>
    </wsdl:message>
    <wsdl:message name="applyReportParamsOut">
        <wsdl:part name="parameters" element="sawsoap:applyReportParamsResult"/>
    </wsdl:message>
    <wsdl:message name="generateReportSQLIn">
        <wsdl:part name="parameters" element="sawsoap:generateReportSQL"/>
    </wsdl:message>
    <wsdl:message name="generateReportSQLOut">
        <wsdl:part name="parameters" element="sawsoap:generateReportSQLResult"/>
    </wsdl:message>
    <wsdl:message name="applyReportDefaultsIn">
        <wsdl:part name="parameters" element="sawsoap:applyReportDefaults"/>
    </wsdl:message>
    <wsdl:message name="applyReportDefaultsOut">
        <wsdl:part name="parameters" element="sawsoap:applyReportDefaultsResult"/>
    </wsdl:message>
    <wsdl:message name="startPageIn">
        <wsdl:part name="parameters" element="sawsoap:startPage"/>
    </wsdl:message>
    <wsdl:message name="startPageOut">
        <wsdl:part name="parameters" element="sawsoap:startPageResult"/>
    </wsdl:message>
    <wsdl:message name="endPageIn">
        <wsdl:part name="parameters" element="sawsoap:endPage"/>
    </wsdl:message>
    <wsdl:message name="endPageOut">
        <wsdl:part name="parameters" element="sawsoap:endPageResult"/>
    </wsdl:message>
    <wsdl:message name="addReportToPageIn">
        <wsdl:part name="parameters" element="sawsoap:addReportToPage"/>
    </wsdl:message>
    <wsdl:message name="addReportToPageOut">
        <wsdl:part name="parameters" element="sawsoap:addReportToPageResult"/>
    </wsdl:message>
    <wsdl:message name="getHeadersHtmlIn">
        <wsdl:part name="parameters" element="sawsoap:getHeadersHtml"/>
    </wsdl:message>
    <wsdl:message name="getHeadersHtmlOut">
        <wsdl:part name="parameters" element="sawsoap:getHeadersHtmlResult"/>
    </wsdl:message>
    <wsdl:message name="getCommonBodyHtmlIn">
        <wsdl:part name="parameters" element="sawsoap:getCommonBodyHtml"/>
    </wsdl:message>
    <wsdl:message name="getCommonBodyHtmlOut">
        <wsdl:part name="parameters" element="sawsoap:getCommonBodyHtmlResult"/>
    </wsdl:message>
    <wsdl:message name="getHtmlForReportIn">
        <wsdl:part name="parameters" element="sawsoap:getHtmlForReport"/>
    </wsdl:message>
    <wsdl:message name="getHtmlForReportOut">
        <wsdl:part name="parameters" element="sawsoap:getHtmlForReportResult"/>
    </wsdl:message>
    <wsdl:message name="setBridgeIn">
        <wsdl:part name="parameters" element="sawsoap:setBridge"/>
    </wsdl:message>
    <wsdl:message name="setBridgeOut">
        <wsdl:part name="parameters" element="sawsoap:setBridgeResult"/>
    </wsdl:message>
    <wsdl:message name="getHtmlForPageWithOneReportIn">
        <wsdl:part name="parameters" element="sawsoap:getHtmlForPageWithOneReport"/>
    </wsdl:message>
    <wsdl:message name="getHtmlForPageWithOneReportOut">
        <wsdl:part name="parameters" element="sawsoap:getHtmlForPageWithOneReportResult"/>
    </wsdl:message>
    <wsdl:message name="clearQueryCacheIn">
        <wsdl:part name="parameters" element="sawsoap:clearQueryCache"/>
    </wsdl:message>
    <wsdl:message name="clearQueryCacheOut">
        <wsdl:part name="parameters" element="sawsoap:clearQueryCacheResult"/>
    </wsdl:message>
    <wsdl:message name="getSubjectAreasIn">
        <wsdl:part name="parameters" element="sawsoap:getSubjectAreas"/>
    </wsdl:message>
    <wsdl:message name="getSubjectAreasOut">
        <wsdl:part name="parameters" element="sawsoap:getSubjectAreasResult"/>
    </wsdl:message>
    <wsdl:message name="describeSubjectAreaIn">
        <wsdl:part name="parameters" element="sawsoap:describeSubjectArea"/>
    </wsdl:message>
    <wsdl:message name="describeSubjectAreaOut">
        <wsdl:part name="parameters" element="sawsoap:describeSubjectAreaResult"/>
    </wsdl:message>
    <wsdl:message name="describeTableIn">
        <wsdl:part name="parameters" element="sawsoap:describeTable"/>
    </wsdl:message>
    <wsdl:message name="describeTableOut">
        <wsdl:part name="parameters" element="sawsoap:describeTableResult"/>
    </wsdl:message>
    <wsdl:message name="describeColumnIn">
        <wsdl:part name="parameters" element="sawsoap:describeColumn"/>
    </wsdl:message>
    <wsdl:message name="describeColumnOut">
        <wsdl:part name="parameters" element="sawsoap:describeColumnResult"/>
    </wsdl:message>
    <wsdl:message name="executeIBotNowIn">
        <wsdl:part name="parameters" element="sawsoap:executeIBotNow"/>
    </wsdl:message>
    <wsdl:message name="executeIBotNowOut">
        <wsdl:part name="parameters" element="sawsoap:executeIBotNowResult"/>
    </wsdl:message>
    <wsdl:message name="writeIBotIn">
        <wsdl:part name="parameters" element="sawsoap:writeIBot"/>
    </wsdl:message>
    <wsdl:message name="writeIBotOut">
        <wsdl:part name="parameters" element="sawsoap:writeIBotResult"/>
    </wsdl:message>
    <wsdl:message name="subscribeIBotIn">
        <wsdl:part name="parameters" element="sawsoap:subscribe"/>
    </wsdl:message>
    <wsdl:message name="subscribeIBotOut">
        <wsdl:part name="parameters" element="sawsoap:subscribeResult"/>
    </wsdl:message>
    <wsdl:message name="unsubscribeIBotIn">
        <wsdl:part name="parameters" element="sawsoap:unsubscribe"/>
    </wsdl:message>
    <wsdl:message name="unsubscribeIBotOut">
        <wsdl:part name="parameters" element="sawsoap:unsubscribeResult"/>
    </wsdl:message>
    <wsdl:message name="moveIBotIn">
        <wsdl:part name="parameters" element="sawsoap:moveIBot"/>
    </wsdl:message>
    <wsdl:message name="moveIBotOut">
        <wsdl:part name="parameters" element="sawsoap:moveIBotResult"/>
    </wsdl:message>
    <wsdl:message name="deleteIBotIn">
        <wsdl:part name="parameters" element="sawsoap:deleteIBot"/>
    </wsdl:message>
    <wsdl:message name="deleteIBotOut">
        <wsdl:part name="parameters" element="sawsoap:deleteIBotResult"/>
    </wsdl:message>
    <wsdl:message name="sendMessageIn">
        <wsdl:part name="parameters" element="sawsoap:sendMessage"/>
    </wsdl:message>
    <wsdl:message name="sendMessageOut">
        <wsdl:part name="parameters" element="sawsoap:sendMessageResult"/>
    </wsdl:message>
    <wsdl:message name="getGlobalPrivilegesIn">
        <wsdl:part name="parameters" element="sawsoap:getGlobalPrivileges"/>
    </wsdl:message>
    <wsdl:message name="getGlobalPrivilegesOut">
        <wsdl:part name="parameters" element="sawsoap:getGlobalPrivilegesResult"/>
    </wsdl:message>
    <wsdl:message name="getGlobalPrivilegeACLIn">
        <wsdl:part name="parameters" element="sawsoap:getGlobalPrivilegeACL"/>
    </wsdl:message>
    <wsdl:message name="getGlobalPrivilegeACLOut">
        <wsdl:part name="parameters" element="sawsoap:getGlobalPrivilegeACLResult"/>
    </wsdl:message>
    <wsdl:message name="updateGlobalPrivilegeACLIn">
        <wsdl:part name="parameters" element="sawsoap:updateGlobalPrivilegeACL"/>
    </wsdl:message>
    <wsdl:message name="updateGlobalPrivilegeACLOut">
        <wsdl:part name="parameters" element="sawsoap:updateGlobalPrivilegeACLResult"/>
    </wsdl:message>
    <wsdl:message name="forgetAccountsIn">
        <wsdl:part name="parameters" element="sawsoap:forgetAccounts"/>
    </wsdl:message>
    <wsdl:message name="forgetAccountsOut">
        <wsdl:part name="parameters" element="sawsoap:forgetAccountsResult"/>
    </wsdl:message>
    <wsdl:message name="renameAccountsIn">
        <wsdl:part name="parameters" element="sawsoap:renameAccounts"/>
    </wsdl:message>
    <wsdl:message name="renameAccountsOut">
        <wsdl:part name="parameters" element="sawsoap:renameAccountsResult"/>
    </wsdl:message>
    <wsdl:message name="joinGroupsIn">
        <wsdl:part name="parameters" element="sawsoap:joinGroups"/>
    </wsdl:message>
    <wsdl:message name="joinGroupsOut">
        <wsdl:part name="parameters" element="sawsoap:joinGroupsResult"/>
    </wsdl:message>
    <wsdl:message name="leaveGroupsIn">
        <wsdl:part name="parameters" element="sawsoap:leaveGroups"/>
    </wsdl:message>
    <wsdl:message name="leaveGroupsOut">
        <wsdl:part name="parameters" element="sawsoap:leaveGroupsResult"/>
    </wsdl:message>
    <wsdl:message name="getGroupsIn">
        <wsdl:part name="parameters" element="sawsoap:getGroups"/>
    </wsdl:message>
    <wsdl:message name="getGroupsOut">
        <wsdl:part name="parameters" element="sawsoap:getGroupsResult"/>
    </wsdl:message>
    <wsdl:message name="getMembersIn">
        <wsdl:part name="parameters" element="sawsoap:getMembers"/>
    </wsdl:message>
    <wsdl:message name="getMembersOut">
        <wsdl:part name="parameters" element="sawsoap:getMembersResult"/>
    </wsdl:message>
    <wsdl:message name="isMemberIn">
        <wsdl:part name="parameters" element="sawsoap:isMember"/>
    </wsdl:message>
    <wsdl:message name="isMemberOut">
        <wsdl:part name="parameters" element="sawsoap:isMemberResult"/>
    </wsdl:message>
    <wsdl:message name="getPermissionsIn">
        <wsdl:part name="parameters" element="sawsoap:getPermissions"/>
    </wsdl:message>
    <wsdl:message name="getPermissionsOut">
        <wsdl:part name="parameters" element="sawsoap:getPermissionsResult"/>
    </wsdl:message>
    <wsdl:message name="getPrivilegesStatusIn">
        <wsdl:part name="parameters" element="sawsoap:getPrivilegesStatus"/>
    </wsdl:message>
    <wsdl:message name="getPrivilegesStatusOut">
        <wsdl:part name="parameters" element="sawsoap:getPrivilegesStatusResult"/>
    </wsdl:message>
    <wsdl:message name="getAccountsIn">
        <wsdl:part name="parameters" element="sawsoap:getAccounts"/>
    </wsdl:message>
    <wsdl:message name="getAccountsOut">
        <wsdl:part name="parameters" element="sawsoap:getAccountsResult"/>
    </wsdl:message>
    <wsdl:message name="executeXMLQueryIn">
        <wsdl:part name="parameters" element="sawsoap:executeXMLQuery"/>
    </wsdl:message>
    <wsdl:message name="executeXMLQueryOut">
        <wsdl:part name="parameters" element="sawsoap:executeXMLQueryResult"/>
    </wsdl:message>
    <wsdl:message name="upgradeXMLIn">
        <wsdl:part name="parameters" element="sawsoap:upgradeXML"/>
    </wsdl:message>
    <wsdl:message name="upgradeXMLOut">
        <wsdl:part name="parameters" element="sawsoap:upgradeXMLResult"/>
    </wsdl:message>
    <wsdl:message name="executeSQLQueryIn">
        <wsdl:part name="parameters" element="sawsoap:executeSQLQuery"/>
    </wsdl:message>
    <wsdl:message name="executeSQLQueryOut">
        <wsdl:part name="parameters" element="sawsoap:executeSQLQueryResult"/>
    </wsdl:message>
    <wsdl:message name="fetchNextIn">
        <wsdl:part name="parameters" element="sawsoap:fetchNext"/>
    </wsdl:message>
    <wsdl:message name="fetchNextOut">
        <wsdl:part name="parameters" element="sawsoap:fetchNextResult"/>
    </wsdl:message>
    <wsdl:message name="cancelQueryIn">
        <wsdl:part name="parameters" element="sawsoap:cancelQuery"/>
    </wsdl:message>
    <wsdl:message name="cancelQueryOut">
        <wsdl:part name="parameters" element="sawsoap:cancelQueryResult"/>
    </wsdl:message>
    <wsdl:message name="getPromptedFiltersIn">
        <wsdl:part name="parameters" element="sawsoap:getPromptedFilters"/>
    </wsdl:message>
    <wsdl:message name="getPromptedFiltersOut">
        <wsdl:part name="parameters" element="sawsoap:getPromptedFiltersResult"/>
    </wsdl:message>
    <wsdl:portType name="JobManagementServiceSoap">
        <wsdl:operation name="writeListFiles">
            <wsdl:input message="sawsoap:writeListFilesIn"/>
            <wsdl:output message="sawsoap:writeListFilesOut"/>
        </wsdl:operation>
        <wsdl:operation name="getJobInfo">
            <wsdl:input message="sawsoap:getJobInfoIn"/>
            <wsdl:output message="sawsoap:getJobInfoOut"/>
        </wsdl:operation>
        <wsdl:operation name="cancelJob">
            <wsdl:input message="sawsoap:cancelJobIn"/>
            <wsdl:output message="sawsoap:cancelJobOut"/>
        </wsdl:operation>
        <wsdl:operation name="getCounts">
            <wsdl:input message="sawsoap:getCountsIn"/>
            <wsdl:output message="sawsoap:getCountsOut"/>
        </wsdl:operation>
        <wsdl:operation name="getPromptedColumns">
            <wsdl:input message="sawsoap:getPromptedColumnsIn"/>
            <wsdl:output message="sawsoap:getPromptedColumnsOut"/>
        </wsdl:operation>
        <wsdl:operation name="purgeCache">
            <wsdl:input message="sawsoap:purgeCacheIn"/>
            <wsdl:output message="sawsoap:purgeCacheOut"/>
        </wsdl:operation>
        <wsdl:operation name="prepareCache">
            <wsdl:input message="sawsoap:prepareCacheIn"/>
            <wsdl:output message="sawsoap:prepareCacheOut"/>
        </wsdl:operation>
        <wsdl:operation name="saveResultSet">
            <wsdl:input message="sawsoap:saveResultSetIn"/>
            <wsdl:output message="sawsoap:saveResultSetOut"/>
        </wsdl:operation>
        <wsdl:operation name="deleteResultSet">
            <wsdl:input message="sawsoap:deleteResultSetIn"/>
            <wsdl:output message="sawsoap:deleteResultSetOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="ConditionServiceSoap">
        <wsdl:operation name="evaluateCondition">
            <wsdl:input message="sawsoap:evaluateConditionIn"/>
            <wsdl:output message="sawsoap:evaluateConditionOut"/>
        </wsdl:operation>
        <wsdl:operation name="evaluateInlineCondition">
            <wsdl:input message="sawsoap:evaluateInlineConditionIn"/>
            <wsdl:output message="sawsoap:evaluateInlineConditionOut"/>
        </wsdl:operation>
        <wsdl:operation name="getConditionCustomizableReportElements">
            <wsdl:input message="sawsoap:getConditionCustomizableReportElementsIn"/>
            <wsdl:output message="sawsoap:getConditionCustomizableReportElementsOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="WebCatalogServiceSoap">
        <wsdl:operation name="deleteItem">
            <wsdl:input message="sawsoap:deleteItemIn"/>
            <wsdl:output message="sawsoap:deleteItemOut"/>
        </wsdl:operation>
        <wsdl:operation name="removeFolder">
            <wsdl:input message="sawsoap:removeFolderIn"/>
            <wsdl:output message="sawsoap:removeFolderOut"/>
        </wsdl:operation>
        <wsdl:operation name="createFolder">
            <wsdl:input message="sawsoap:createFolderIn"/>
            <wsdl:output message="sawsoap:createFolderOut"/>
        </wsdl:operation>
        <wsdl:operation name="createLink">
            <wsdl:input message="sawsoap:createLinkIn"/>
            <wsdl:output message="sawsoap:createLinkOut"/>
        </wsdl:operation>
        <wsdl:operation name="moveItem">
            <wsdl:input message="sawsoap:moveItemIn"/>
            <wsdl:output message="sawsoap:moveItemOut"/>
        </wsdl:operation>
        <wsdl:operation name="copyItem">
            <wsdl:input message="sawsoap:copyItemIn"/>
            <wsdl:output message="sawsoap:copyItemOut"/>
        </wsdl:operation>
        <wsdl:operation name="copyItem2">
            <wsdl:input message="sawsoap:copyItem2In"/>
            <wsdl:output message="sawsoap:copyItem2Out"/>
        </wsdl:operation>
        <wsdl:operation name="pasteItem2">
            <wsdl:input message="sawsoap:pasteItem2In"/>
            <wsdl:output message="sawsoap:pasteItem2Out"/>
        </wsdl:operation>
        <wsdl:operation name="getSubItems">
            <wsdl:input message="sawsoap:getSubItemsIn"/>
            <wsdl:output message="sawsoap:getSubItemsOut"/>
        </wsdl:operation>
        <wsdl:operation name="getItemInfo">
            <wsdl:input message="sawsoap:getItemInfoIn"/>
            <wsdl:output message="sawsoap:getItemInfoOut"/>
        </wsdl:operation>
        <wsdl:operation name="setItemProperty">
            <wsdl:input message="sawsoap:setItemPropertyIn"/>
            <wsdl:output message="sawsoap:setItemPropertyOut"/>
        </wsdl:operation>
        <wsdl:operation name="maintenanceMode">
            <wsdl:input message="sawsoap:maintenanceModeIn"/>
            <wsdl:output message="sawsoap:maintenanceModeOut"/>
        </wsdl:operation>
        <wsdl:operation name="readObjects">
            <wsdl:input message="sawsoap:readObjectsIn"/>
            <wsdl:output message="sawsoap:readObjectsOut"/>
        </wsdl:operation>
        <wsdl:operation name="writeObjects">
            <wsdl:input message="sawsoap:writeObjectsIn"/>
            <wsdl:output message="sawsoap:writeObjectsOut"/>
        </wsdl:operation>
        <wsdl:operation name="updateCatalogItemACL">
            <wsdl:input message="sawsoap:updateCatalogItemACLIn"/>
            <wsdl:output message="sawsoap:updateCatalogItemACLOut"/>
        </wsdl:operation>
        <wsdl:operation name="setOwnership">
            <wsdl:input message="sawsoap:setOwnershipIn"/>
            <wsdl:output message="sawsoap:setOwnershipOut"/>
        </wsdl:operation>
        <wsdl:operation name="setItemAttributes">
            <wsdl:input message="sawsoap:setItemAttributesIn"/>
            <wsdl:output message="sawsoap:setItemAttributesOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="ReplicationServiceSoap">
        <wsdl:operation name="export">
            <wsdl:input message="sawsoap:exportIn"/>
            <wsdl:output message="sawsoap:exportOut"/>
        </wsdl:operation>
        <wsdl:operation name="import">
            <jaxws:bindings xmlns:jaxws="http://java.sun.com/xml/ns/jaxws">
                <jaxws:method name="_import">
                    <jaxws:javadoc>imports change log</jaxws:javadoc>
                </jaxws:method>
            </jaxws:bindings>
            <wsdl:input message="sawsoap:importIn"/>
            <wsdl:output message="sawsoap:importOut"/>
        </wsdl:operation>
        <wsdl:operation name="markForReplication">
            <wsdl:input message="sawsoap:markForReplicationIn"/>
            <wsdl:output message="sawsoap:markForReplicationOut"/>
        </wsdl:operation>
        <wsdl:operation name="purgeLog">
            <wsdl:input message="sawsoap:purgeLogIn"/>
            <wsdl:output message="sawsoap:purgeLogOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="SAWSessionServiceSoap">
        <wsdl:operation name="logon">
            <wsdl:input message="sawsoap:logonIn"/>
            <wsdl:output message="sawsoap:logonOut"/>
        </wsdl:operation>
        <wsdl:operation name="logonex">
            <wsdl:input message="sawsoap:logonexIn"/>
            <wsdl:output message="sawsoap:logonexOut"/>
        </wsdl:operation>
        <wsdl:operation name="logoff">
            <wsdl:input message="sawsoap:logoffIn"/>
            <wsdl:output message="sawsoap:logoffOut"/>
        </wsdl:operation>
        <wsdl:operation name="keepAlive">
            <wsdl:input message="sawsoap:keepAliveIn"/>
            <wsdl:output message="sawsoap:keepAliveOut"/>
        </wsdl:operation>
        <wsdl:operation name="getCurUser">
            <wsdl:input message="sawsoap:getCurUserIn"/>
            <wsdl:output message="sawsoap:getCurUserOut"/>
        </wsdl:operation>
        <wsdl:operation name="getSessionEnvironment">
            <wsdl:input message="sawsoap:getSessionEnvironmentIn"/>
            <wsdl:output message="sawsoap:getSessionEnvironmentOut"/>
        </wsdl:operation>
        <wsdl:operation name="getSessionVariables">
            <wsdl:documentation>Returns values of BIEE variables associated with the current session
           Here is the list of predefined variables :
           NQ_SESSION.USER,
           NQ_SESSION.USERGUID,
           NQ_SESSION.GROUP,
           NQ_SESSION.GROUPGUIDS,
           NQ_SESSION.WEBGROUPS,
           NQ_SESSION.REALM,
           NQ_SESSION.REALMGUID,
           NQ_SESSION.TOKENS,
           NQ_SESSION.REQUESTKEY,
           NQ_SESSION.PORTALPATH,
           NQ_SESSION.DISPLAYNAME,
           NQ_SESSION.SKIN,
           NQ_SESSION.STYLE,
           NQ_SESSION.EMAIL,
           NQ_SESSION.CURRENCYTAG,
           NQ_SESSION.ACTUATEUSERID,
           NQ_SESSION.TIMEZONE,
           NQ_SESSION.DATA_TZ,
           NQ_SESSION.DATA_DISPLAY_TZ,
           NQ_SESSION.PROXYLEVEL,
           NQ_SESSION.USERLOCALE,
           NQ_SESSION.USERLANG,
           NQ_SESSION.PREFERRED_CURRENCY</wsdl:documentation>
            <wsdl:input message="sawsoap:getSessionVariablesIn"/>
            <wsdl:output message="sawsoap:getSessionVariablesOut"/>
        </wsdl:operation>
        <wsdl:operation name="impersonate">
            <wsdl:input message="sawsoap:impersonateIn"/>
            <wsdl:output message="sawsoap:impersonateOut"/>
        </wsdl:operation>
        <wsdl:operation name="impersonateex">
            <wsdl:input message="sawsoap:impersonateexIn"/>
            <wsdl:output message="sawsoap:impersonateexOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="ReportEditingServiceSoap">
        <wsdl:operation name="applyReportParams">
            <wsdl:input message="sawsoap:applyReportParamsIn"/>
            <wsdl:output message="sawsoap:applyReportParamsOut"/>
        </wsdl:operation>
        <wsdl:operation name="generateReportSQL">
            <wsdl:input message="sawsoap:generateReportSQLIn"/>
            <wsdl:output message="sawsoap:generateReportSQLOut"/>
        </wsdl:operation>
        <wsdl:operation name="applyReportDefaults">
            <wsdl:input message="sawsoap:applyReportDefaultsIn"/>
            <wsdl:output message="sawsoap:applyReportDefaultsOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="HtmlViewServiceSoap">
        <wsdl:operation name="startPage">
            <wsdl:input message="sawsoap:startPageIn"/>
            <wsdl:output message="sawsoap:startPageOut"/>
        </wsdl:operation>
        <wsdl:operation name="endPage">
            <wsdl:input message="sawsoap:endPageIn"/>
            <wsdl:output message="sawsoap:endPageOut"/>
        </wsdl:operation>
        <wsdl:operation name="addReportToPage">
            <wsdl:input message="sawsoap:addReportToPageIn"/>
            <wsdl:output message="sawsoap:addReportToPageOut"/>
        </wsdl:operation>
        <wsdl:operation name="getHeadersHtml">
            <wsdl:input message="sawsoap:getHeadersHtmlIn"/>
            <wsdl:output message="sawsoap:getHeadersHtmlOut"/>
        </wsdl:operation>
        <wsdl:operation name="getCommonBodyHtml">
            <wsdl:input message="sawsoap:getCommonBodyHtmlIn"/>
            <wsdl:output message="sawsoap:getCommonBodyHtmlOut"/>
        </wsdl:operation>
        <wsdl:operation name="getHtmlForReport">
            <wsdl:input message="sawsoap:getHtmlForReportIn"/>
            <wsdl:output message="sawsoap:getHtmlForReportOut"/>
        </wsdl:operation>
        <wsdl:operation name="setBridge">
            <wsdl:input message="sawsoap:setBridgeIn"/>
            <wsdl:output message="sawsoap:setBridgeOut"/>
        </wsdl:operation>
        <wsdl:operation name="getHtmlForPageWithOneReport">
            <wsdl:input message="sawsoap:getHtmlForPageWithOneReportIn"/>
            <wsdl:output message="sawsoap:getHtmlForPageWithOneReportOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="MetadataServiceSoap">
        <wsdl:operation name="clearQueryCache">
            <wsdl:input message="sawsoap:clearQueryCacheIn"/>
            <wsdl:output message="sawsoap:clearQueryCacheOut"/>
        </wsdl:operation>
        <wsdl:operation name="getSubjectAreas">
            <wsdl:input message="sawsoap:getSubjectAreasIn"/>
            <wsdl:output message="sawsoap:getSubjectAreasOut"/>
        </wsdl:operation>
        <wsdl:operation name="describeSubjectArea">
            <wsdl:input message="sawsoap:describeSubjectAreaIn"/>
            <wsdl:output message="sawsoap:describeSubjectAreaOut"/>
        </wsdl:operation>
        <wsdl:operation name="describeTable">
            <wsdl:input message="sawsoap:describeTableIn"/>
            <wsdl:output message="sawsoap:describeTableOut"/>
        </wsdl:operation>
        <wsdl:operation name="describeColumn">
            <wsdl:input message="sawsoap:describeColumnIn"/>
            <wsdl:output message="sawsoap:describeColumnOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="IBotServiceSoap">
        <wsdl:operation name="executeIBotNow">
            <wsdl:input message="sawsoap:executeIBotNowIn"/>
            <wsdl:output message="sawsoap:executeIBotNowOut"/>
        </wsdl:operation>
        <wsdl:operation name="writeIBot">
            <wsdl:input message="sawsoap:writeIBotIn"/>
            <wsdl:output message="sawsoap:writeIBotOut"/>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <wsdl:input message="sawsoap:subscribeIBotIn"/>
            <wsdl:output message="sawsoap:subscribeIBotOut"/>
        </wsdl:operation>
        <wsdl:operation name="unsubscribe">
            <wsdl:input message="sawsoap:unsubscribeIBotIn"/>
            <wsdl:output message="sawsoap:unsubscribeIBotOut"/>
        </wsdl:operation>
        <wsdl:operation name="moveIBot">
            <wsdl:input message="sawsoap:moveIBotIn"/>
            <wsdl:output message="sawsoap:moveIBotOut"/>
        </wsdl:operation>
        <wsdl:operation name="deleteIBot">
            <wsdl:input message="sawsoap:deleteIBotIn"/>
            <wsdl:output message="sawsoap:deleteIBotOut"/>
        </wsdl:operation>
        <wsdl:operation name="sendMessage">
            <wsdl:input message="sawsoap:sendMessageIn"/>
            <wsdl:output message="sawsoap:sendMessageOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="SecurityServiceSoap">
        <wsdl:operation name="getGlobalPrivileges">
            <wsdl:input message="sawsoap:getGlobalPrivilegesIn"/>
            <wsdl:output message="sawsoap:getGlobalPrivilegesOut"/>
        </wsdl:operation>
        <wsdl:operation name="getGlobalPrivilegeACL">
            <wsdl:input message="sawsoap:getGlobalPrivilegeACLIn"/>
            <wsdl:output message="sawsoap:getGlobalPrivilegeACLOut"/>
        </wsdl:operation>
        <wsdl:operation name="updateGlobalPrivilegeACL">
            <wsdl:input message="sawsoap:updateGlobalPrivilegeACLIn"/>
            <wsdl:output message="sawsoap:updateGlobalPrivilegeACLOut"/>
        </wsdl:operation>
        <wsdl:operation name="forgetAccounts">
            <wsdl:input message="sawsoap:forgetAccountsIn"/>
            <wsdl:output message="sawsoap:forgetAccountsOut"/>
        </wsdl:operation>
        <wsdl:operation name="renameAccounts">
            <wsdl:input message="sawsoap:renameAccountsIn"/>
            <wsdl:output message="sawsoap:renameAccountsOut"/>
        </wsdl:operation>
        <wsdl:operation name="joinGroups">
            <wsdl:input message="sawsoap:joinGroupsIn"/>
            <wsdl:output message="sawsoap:joinGroupsOut"/>
        </wsdl:operation>
        <wsdl:operation name="leaveGroups">
            <wsdl:input message="sawsoap:leaveGroupsIn"/>
            <wsdl:output message="sawsoap:leaveGroupsOut"/>
        </wsdl:operation>
        <wsdl:operation name="getGroups">
            <wsdl:input message="sawsoap:getGroupsIn"/>
            <wsdl:output message="sawsoap:getGroupsOut"/>
        </wsdl:operation>
        <wsdl:operation name="getMembers">
            <wsdl:input message="sawsoap:getMembersIn"/>
            <wsdl:output message="sawsoap:getMembersOut"/>
        </wsdl:operation>
        <wsdl:operation name="isMember">
            <wsdl:input message="sawsoap:isMemberIn"/>
            <wsdl:output message="sawsoap:isMemberOut"/>
        </wsdl:operation>
        <wsdl:operation name="getPermissions">
            <wsdl:input message="sawsoap:getPermissionsIn"/>
            <wsdl:output message="sawsoap:getPermissionsOut"/>
        </wsdl:operation>
        <wsdl:operation name="getPrivilegesStatus">
            <wsdl:input message="sawsoap:getPrivilegesStatusIn"/>
            <wsdl:output message="sawsoap:getPrivilegesStatusOut"/>
        </wsdl:operation>
        <wsdl:operation name="getAccounts">
            <wsdl:input message="sawsoap:getAccountsIn"/>
            <wsdl:output message="sawsoap:getAccountsOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:portType name="XmlViewServiceSoap">
        <wsdl:operation name="executeXMLQuery">
            <wsdl:input message="sawsoap:executeXMLQueryIn"/>
            <wsdl:output message="sawsoap:executeXMLQueryOut"/>
        </wsdl:operation>
        <wsdl:operation name="upgradeXML">
            <wsdl:input message="sawsoap:upgradeXMLIn"/>
            <wsdl:output message="sawsoap:upgradeXMLOut"/>
        </wsdl:operation>
        <wsdl:operation name="executeSQLQuery">
            <wsdl:input message="sawsoap:executeSQLQueryIn"/>
            <wsdl:output message="sawsoap:executeSQLQueryOut"/>
        </wsdl:operation>
        <wsdl:operation name="fetchNext">
            <wsdl:input message="sawsoap:fetchNextIn"/>
            <wsdl:output message="sawsoap:fetchNextOut"/>
        </wsdl:operation>
        <wsdl:operation name="cancelQuery">
            <wsdl:input message="sawsoap:cancelQueryIn"/>
            <wsdl:output message="sawsoap:cancelQueryOut"/>
        </wsdl:operation>
        <wsdl:operation name="getPromptedFilters">
            <wsdl:input message="sawsoap:getPromptedFiltersIn"/>
            <wsdl:output message="sawsoap:getPromptedFiltersOut"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="SecurityService" type="sawsoap:SecurityServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="getGlobalPrivileges">
            <soap:operation style="document" soapAction="#getGlobalPrivileges"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getGlobalPrivilegeACL">
            <soap:operation style="document" soapAction="#getGlobalPrivilegeACL"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateGlobalPrivilegeACL">
            <soap:operation style="document" soapAction="#updateGlobalPrivilegeACL"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="forgetAccounts">
            <soap:operation style="document" soapAction="#forgetAccounts"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="renameAccounts">
            <soap:operation style="document" soapAction="#renameAccounts"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="joinGroups">
            <soap:operation style="document" soapAction="#joinGroups"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="leaveGroups">
            <soap:operation style="document" soapAction="#leaveGroups"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getGroups">
            <soap:operation style="document" soapAction="#getGroups"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMembers">
            <soap:operation style="document" soapAction="#getMembers"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isMember">
            <soap:operation style="document" soapAction="#isMember"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPermissions">
            <soap:operation style="document" soapAction="#getPermissions"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPrivilegesStatus">
            <soap:operation style="document" soapAction="#getPrivilegesStatus"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getAccounts">
            <soap:operation style="document" soapAction="#getAccounts"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="XmlViewService" type="sawsoap:XmlViewServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="executeXMLQuery">
            <soap:operation style="document" soapAction="#executeXMLQuery"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="upgradeXML">
            <soap:operation style="document" soapAction="#upgradeXML"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="executeSQLQuery">
            <soap:operation style="document" soapAction="#executeSQLQuery"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="fetchNext">
            <soap:operation style="document" soapAction="#fetchNext"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="cancelQuery">
            <soap:operation style="document" soapAction="#cancelQuery"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPromptedFilters">
            <soap:operation style="document" soapAction="#getPromptedFilters"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="WebCatalogService" type="sawsoap:WebCatalogServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="deleteItem">
            <soap:operation soapAction="#deleteItem"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createFolder">
            <soap:operation soapAction="#createFolder"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createLink">
            <soap:operation soapAction="#createLink"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeFolder">
            <soap:operation soapAction="#removeFolder"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="moveItem">
            <soap:operation soapAction="#moveItem"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="copyItem">
            <soap:operation soapAction="#copyItem"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="copyItem2">
            <soap:operation style="document" soapAction="#copyItem2"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="pasteItem2">
            <soap:operation soapAction="#pasteItem2"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSubItems">
            <soap:operation style="document" soapAction="#getSubItems"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getItemInfo">
            <soap:operation style="document" soapAction="#getItemInfo"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="setItemProperty">
            <soap:operation style="document" soapAction="#setItemProperty"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="maintenanceMode">
            <soap:operation style="document" soapAction="#maintenanceMode"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="readObjects">
            <soap:operation style="document" soapAction="#readObjects"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="writeObjects">
            <soap:operation style="document" soapAction="#writeObjects"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateCatalogItemACL">
            <soap:operation style="document" soapAction="#updateCatalogItemACL"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="setOwnership">
            <soap:operation style="document" soapAction="#setOwnership"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="setItemAttributes">
            <soap:operation style="document" soapAction="#setItemAttributes"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="ReplicationService" type="sawsoap:ReplicationServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="export">
            <soap:operation style="document" soapAction="#export"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="import">
            <soap:operation style="document" soapAction="#import"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="markForReplication">
            <soap:operation style="document" soapAction="#markForReplication"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="purgeLog">
            <soap:operation style="document" soapAction="#purgeLog"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="JobManagementService" type="sawsoap:JobManagementServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="writeListFiles">
            <soap:operation style="document" soapAction="#writeListFiles"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobInfo">
            <soap:operation style="document" soapAction="#getJobInfo"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="cancelJob">
            <soap:operation style="document" soapAction="#cancelJob"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCounts">
            <soap:operation style="document" soapAction="#getCounts"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getPromptedColumns">
            <soap:operation style="document" soapAction="#getPromptedColumns"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="purgeCache">
            <soap:operation style="document" soapAction="#purgeCache"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="prepareCache">
            <soap:operation style="document" soapAction="#prepareCache"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="saveResultSet">
            <soap:operation style="document" soapAction="#saveResultSet"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteResultSet">
            <soap:operation style="document" soapAction="#deleteResultSet"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="SAWSessionService" type="sawsoap:SAWSessionServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="logon">
            <soap:operation style="document" soapAction="#logon"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="logonex">
            <soap:operation style="document" soapAction="#logonex"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="logoff">
            <soap:operation style="document" soapAction="#logoff"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="keepAlive">
            <soap:operation style="document" soapAction="#keepAlive"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCurUser">
            <soap:operation style="document" soapAction="#getCurUser"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSessionEnvironment">
            <soap:operation style="document" soapAction="#getSessionEnvironment"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSessionVariables">
            <soap:operation style="document" soapAction="#getSessionVariables"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="impersonate">
            <soap:operation style="document" soapAction="#impersonate"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="impersonateex">
            <soap:operation style="document" soapAction="#impersonateex"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="ConditionService" type="sawsoap:ConditionServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="evaluateCondition">
            <soap:operation style="document" soapAction="#evaluateCondition"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="evaluateInlineCondition">
            <soap:operation style="document" soapAction="#evaluateInlineCondition"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getConditionCustomizableReportElements">
            <soap:operation style="document" soapAction="#getConditionCustomizableReportElements"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="ReportEditingService" type="sawsoap:ReportEditingServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="applyReportParams">
            <soap:operation style="document" soapAction="#applyReportParams"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="generateReportSQL">
            <soap:operation style="document" soapAction="#generateReportSQL"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="applyReportDefaults">
            <soap:operation style="document" soapAction="#applyReportDefaults"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="MetadataService" type="sawsoap:MetadataServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="clearQueryCache">
            <soap:operation style="document" soapAction="#clearQueryCache"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSubjectAreas">
            <soap:operation style="document" soapAction="#getSubjectAreas"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="describeSubjectArea">
            <soap:operation style="document" soapAction="#describeSubjectArea"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="describeTable">
            <soap:operation style="document" soapAction="#describeTable"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="describeColumn">
            <soap:operation style="document" soapAction="#describeColumn"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="HtmlViewService" type="sawsoap:HtmlViewServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="startPage">
            <soap:operation style="document" soapAction="#startPage"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="endPage">
            <soap:operation style="document" soapAction="#endPage"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addReportToPage">
            <soap:operation style="document" soapAction="#addReportToPage"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getHeadersHtml">
            <soap:operation style="document" soapAction="#getHeadersHtml"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCommonBodyHtml">
            <soap:operation style="document" soapAction="#getCommonBodyHtml"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getHtmlForReport">
            <soap:operation style="document" soapAction="#getHtmlForReport"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="setBridge">
            <soap:operation style="document" soapAction="#setBridge"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getHtmlForPageWithOneReport">
            <soap:operation style="document" soapAction="#getHtmlForPageWithOneReport"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="IBotService" type="sawsoap:IBotServiceSoap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="executeIBotNow">
            <soap:operation style="document" soapAction="#executeIBotNow"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="writeIBot">
            <soap:operation style="document" soapAction="#writeIBot"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="moveIBot">
            <soap:operation style="document" soapAction="#moveIBot"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <soap:operation style="document" soapAction="#subscribe"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="unsubscribe">
            <soap:operation style="document" soapAction="#unsubscribe"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteIBot">
            <soap:operation style="document" soapAction="#deleteIBot"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="sendMessage">
            <soap:operation style="document" soapAction="#sendMessage"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="SecurityService">
        <wsdl:port name="SecurityServiceSoap" binding="sawsoap:SecurityService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=securityService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="XmlViewService">
        <wsdl:port name="XmlViewServiceSoap" binding="sawsoap:XmlViewService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=xmlViewService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="WebCatalogService">
        <wsdl:port name="WebCatalogServiceSoap" binding="sawsoap:WebCatalogService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=webCatalogService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="ReplicationService">
        <wsdl:port name="ReplicationServiceSoap" binding="sawsoap:ReplicationService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=replicationService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="JobManagementService">
        <wsdl:port name="JobManagementServiceSoap" binding="sawsoap:JobManagementService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=jobManagementService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="SAWSessionService">
        <wsdl:port name="SAWSessionServiceSoap" binding="sawsoap:SAWSessionService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=nQSessionService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="ConditionService">
        <wsdl:port name="ConditionServiceSoap" binding="sawsoap:ConditionService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=conditionService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="ReportEditingService">
        <wsdl:port name="ReportEditingServiceSoap" binding="sawsoap:ReportEditingService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=reportService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="MetadataService">
        <wsdl:port name="MetadataServiceSoap" binding="sawsoap:MetadataService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=metadataService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="HtmlViewService">
        <wsdl:port name="HtmlViewService" binding="sawsoap:HtmlViewService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=htmlViewService"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:service name="IBotService">
        <wsdl:port name="IBotServiceSoap" binding="sawsoap:IBotService">
            <soap:address location="http://msk-02-orabits.tsretail.ru:9704/analytics/saw.dll?SoapImpl=ibotService"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
